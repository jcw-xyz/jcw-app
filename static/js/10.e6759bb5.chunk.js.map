{"version":3,"sources":["components/pages/Report/Row.tsx","components/pages/Report/index.tsx"],"names":["Row","coin_name","coin_id","reward_sum","mined_value","fees_sum","exchanged_value","percent","owed_value","owed","mined_coin_earnings_value","mined_coin_earnings","projected_orphan_rate","actual_orphan_rate","confirmed","orphaned","lost","key","className","toFixed","Report","dispatch","useDispatch","report","useSelector","state","api","useState","Date","date","useEffect","type","apiActions","FETCH_REPORT","getTime","getMonth","getDate","getFullYear","map"],"mappings":"8MAEe,SAASA,EAAT,GAgCX,IA/BAC,EA+BD,EA/BCA,UACAC,EA8BD,EA9BCA,QACAC,EA6BD,EA7BCA,WAEAC,GA2BD,EA5BCC,SA4BD,EA3BCD,aACAE,EA0BD,EA1BCA,gBA2BMC,GADP,EAzBCC,WAyBD,EAxBCC,KAwBD,EAvBCC,0BAuBD,EAtBCC,oBAsBD,EArBCC,sBAqBD,EApBCC,mBAoBD,EAnBCC,UAmBD,EAlBCC,SAkBD,EAjBCC,KAmBIV,GAAmBF,GAAgBE,EAAkBF,GAAeA,EAAe,IAAM,GAE7F,OACI,wBAAIa,IAAKf,EAASgB,UAAU,mBACxB,wBAAIA,UAAU,QAAQjB,GACtB,wBAAIiB,UAAU,QAAQf,EAAWgB,QAAQ,IACzC,wBACID,UAAS,gBACO,IAAZX,EACM,iBACAA,EAAU,EACV,iBACA,iBAGTA,EAAQY,QAAQ,GATrB,MCnCG,SAASC,IACpB,IAAMC,EAAWC,cACXC,EAAcC,aAAuB,SAACC,GAAD,OAAWA,EAAMC,IAAIH,UAFnC,EAGdI,mBAAS,IAAIC,MAArBC,EAHsB,oBAW7B,OAPAC,qBAAU,WACNT,EAAS,CACLU,KAAMC,IAAWC,aACjBJ,KAAMA,EAAKK,cAEhB,CAACb,EAAUQ,IAGV,kBAAC,IAAD,CAASX,UAAU,SACf,wBAAIA,UAAU,iCAAd,qBACuBW,EAAKM,WAAa,EAAI,GAAK,IAAM,GACnDN,EAAKM,WAAa,EAFvB,IAE2BN,EAAKO,UAAY,GAAK,IAAM,GAClDP,EAAKO,UAHV,IAGsBP,EAAKQ,eAE1Bd,EACG,2BAAOL,UAAU,kEACb,2BAAOA,UAAU,iBACb,4BACI,wBAAIA,UAAU,8BAAd,aACA,wBAAIA,UAAU,8BAAd,SACA,wBAAIA,UAAU,8BAAd,UAGR,+BACKK,GACGA,EAAOe,KACH,gBACIrC,EADJ,EACIA,UACAC,EAFJ,EAEIA,QACAC,EAHJ,EAGIA,WACAE,EAJJ,EAIIA,SACAD,EALJ,EAKIA,YACAE,EANJ,EAMIA,gBACAE,EAPJ,EAOIA,WACAC,EARJ,EAQIA,KACAC,EATJ,EASIA,0BACAC,EAVJ,EAUIA,oBACAC,EAXJ,EAWIA,sBACAC,EAZJ,EAYIA,mBACAC,EAbJ,EAaIA,UACAC,EAdJ,EAcIA,SACAC,EAfJ,EAeIA,KAfJ,OAiCI,kBAAChB,EAAD,CACIiB,IAAKf,EACLD,UAAWA,EACXC,QAASA,EACTC,WAAYA,EACZE,SAAUA,EACVD,YAAaA,EACbE,gBAAiBA,EACjBE,WAAYA,EACZC,KAAMA,EACNC,0BAA2BA,EAC3BC,oBAAqBA,EACrBC,sBAAuBA,EACvBC,mBAAoBA,EACpBC,UAAWA,EACXC,SAAUA,EACVC,KAAMA,SAO9B,wBAAIE,UAAU,kCAAd","file":"static/js/10.e6759bb5.chunk.js","sourcesContent":["import React from 'react';\n\nexport default function Row({\n    coin_name,\n    coin_id,\n    reward_sum,\n    fees_sum,\n    mined_value,\n    exchanged_value,\n    owed_value,\n    owed,\n    mined_coin_earnings_value,\n    mined_coin_earnings,\n    projected_orphan_rate,\n    actual_orphan_rate,\n    confirmed,\n    orphaned,\n    lost,\n}: {\n    coin_name: string;\n    coin_id: number;\n    reward_sum: number;\n    fees_sum: number;\n    mined_value: number;\n    exchanged_value: number;\n    owed_value: number;\n    owed: number;\n    mined_coin_earnings_value: number;\n    mined_coin_earnings: number;\n    projected_orphan_rate: number;\n    actual_orphan_rate: number;\n    confirmed: number;\n    orphaned: number;\n    lost: number;\n}) {\n    const percent: number =\n        exchanged_value && mined_value ? ((exchanged_value - mined_value) / mined_value) * 100 : 0;\n\n    return (\n        <tr key={coin_id} className=' text-app_ivory'>\n            <th className='pt-4'>{coin_name}</th>\n            <th className='pt-4'>{reward_sum.toFixed(3)}</th>\n            <th\n                className={`pt-4  ${\n                    percent === 0\n                        ? 'text-app_ivory'\n                        : percent > 0\n                        ? 'text-green-700'\n                        : 'text-red-700'\n                }`}\n            >\n                {percent.toFixed(2)}%\n            </th>\n        </tr>\n    );\n}\n","import React, { useEffect, useState } from 'react';\nimport { Content } from '../../core';\nimport { useDispatch, useSelector } from 'react-redux';\nimport apiActions from '../../../store/api/apiActions';\nimport { RootState } from '../../../types';\nimport Row from './Row';\n\nexport default function Report() {\n    const dispatch = useDispatch();\n    const report: any = useSelector<RootState>((state) => state.api.report);\n    const [date] = useState(new Date());\n    useEffect(() => {\n        dispatch({\n            type: apiActions.FETCH_REPORT,\n            date: date.getTime(),\n        });\n    }, [dispatch, date]);\n\n    return (\n        <Content className='pt-10'>\n            <h1 className='pt-8 pl-4 text-xl font-medium'>\n                Daily Pool Profit {date.getMonth() + 1 < 10 ? '0' : ''}\n                {date.getMonth() + 1}-{date.getDate() < 10 ? '0' : ''}\n                {date.getDate()}-{date.getFullYear()}\n            </h1>\n            {report ? (\n                <table className='relative w-full mx-4 text-xs text-left table-auto lg:text-base'>\n                    <thead className='text-app_gray'>\n                        <tr>\n                            <th className='sticky top-0 pt-4 bg-black'>Coin Name</th>\n                            <th className='sticky top-0 pt-4 bg-black'>Mined</th>\n                            <th className='sticky top-0 pt-4 bg-black'>PnL%</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {report &&\n                            report.map(\n                                ({\n                                    coin_name,\n                                    coin_id,\n                                    reward_sum,\n                                    fees_sum,\n                                    mined_value,\n                                    exchanged_value,\n                                    owed_value,\n                                    owed,\n                                    mined_coin_earnings_value,\n                                    mined_coin_earnings,\n                                    projected_orphan_rate,\n                                    actual_orphan_rate,\n                                    confirmed,\n                                    orphaned,\n                                    lost,\n                                }: {\n                                    coin_name: string;\n                                    coin_id: number;\n                                    reward_sum: number;\n                                    fees_sum: number;\n                                    mined_value: number;\n                                    exchanged_value: number;\n                                    owed_value: number;\n                                    owed: number;\n                                    mined_coin_earnings_value: number;\n                                    mined_coin_earnings: number;\n                                    projected_orphan_rate: number;\n                                    actual_orphan_rate: number;\n                                    confirmed: number;\n                                    orphaned: number;\n                                    lost: number;\n                                }) => (\n                                    <Row\n                                        key={coin_id}\n                                        coin_name={coin_name}\n                                        coin_id={coin_id}\n                                        reward_sum={reward_sum}\n                                        fees_sum={fees_sum}\n                                        mined_value={mined_value}\n                                        exchanged_value={exchanged_value}\n                                        owed_value={owed_value}\n                                        owed={owed}\n                                        mined_coin_earnings_value={mined_coin_earnings_value}\n                                        mined_coin_earnings={mined_coin_earnings}\n                                        projected_orphan_rate={projected_orphan_rate}\n                                        actual_orphan_rate={actual_orphan_rate}\n                                        confirmed={confirmed}\n                                        orphaned={orphaned}\n                                        lost={lost}\n                                    />\n                                )\n                            )}\n                    </tbody>\n                </table>\n            ) : (\n                <h1 className='pt-8 text-center text-app_gray'>Generating report...</h1>\n            )}\n        </Content>\n    );\n}\n"],"sourceRoot":""}